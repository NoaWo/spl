BONUS CHALLENGE FORM
--------------------

For each bonus challenge you have implemented, please replace the sentence "We are not entitled to this bonus."
with a short description of:

1. How it was implemented in your code
2. Where it was used (in which class methods).
3. How you tested that it is working correctly.

--------------------

1. Fully supporting all configuration fields and avoiding the use of magic numbers

1. We didnt use magic number, and we supporting all configuration fields. we determine flag/millis numbers as public static final in the table class.
2. We use configuration fields in: table constructor, table placeCard, table removeCard, player AI run, player point, player penalty, 
   dealer constructor, dealer run, dealer timerLoop, dealer placeCardsOnTable, dealer sleepUntilWokenOrTimeout, dealer updateTimerDisplay.
3. We changed configuration fields and checked the game fit to these configuration fields.

--------------------

2. Terminating all threads (that you created) gracefully and in reverse order to the order they were created in.

1. For each thread we open, before we terminate it, we first interrupted and join the all threads that opened after him.
2. dealer terminate, player terminate.
3. We checked in log file that the order of threads terminate is in reverse order.

--------------------

3. Handling the config.turnTimeoutMillis value as follows:
config.turnTimeoutMillis < 0: display nothing.
config.turnTimeoutMillis = 0: display a timer since the last action (reshuffle or set collected).
Note: in modes without a countdown timer the dealer must ensure there is always at least one legal set on the table.

1. We checked config.turnTimeoutMillis and perform right action accordingly.
2. dealer timerLoop, dealer placeCardsOnTable, dealer sleepUntilWokenOrTimeout, dealer updateTimerDisplay.
3. We changed config.turnTimeoutMillis value and checked the game fit to this value.

--------------------

4. Making sure that the threads do not wake up unless some actual job needs to be done (e.g., a value needs to be
changed on the display, key input needs to be handled, etc.) and the only threads created by you are:
1 thread per player + 1 additional thread for non-human players.

1. When a thread should wait/sleep, we put it in wait/sleep state until something is changed and he need to do something. Also we didnt create extra threads.
2. player run, player AI run, player getFeedback, dealer sleepUntilWokenOrTimeout.
3. We checked that every time a thread is blocking, it is waiting or sleeping.